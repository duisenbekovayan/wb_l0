# (можешь убрать строку version: — она устарела)
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports: ["2181:2181"]

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on: [zookeeper]
    ports:
      - "9092:9092"   # наружу
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      # два listener'а: внутренний и внешний
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INT://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:15
    ports: ["5432:5432"]
    environment:
      POSTGRES_USER: wb
      POSTGRES_PASSWORD: wb
      POSTGRES_DB: wb_orders
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init_user.sql:/docker-entrypoint-initdb.d/init_user.sql:ro

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: ["-path","/migrations","-database","postgres://wb:wb@postgres:5432/wb_orders?sslmode=disable","up"]
    depends_on: [postgres]

  adminer:
    image: adminer
    ports: ["8081:8080"]
    depends_on: [postgres]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_USER: wb
      PG_PASSWORD: wb
      PG_DB: wb_orders
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: orders
      KAFKA_GROUP: orders-consumer
      HTTP_ADDR: :8080
    depends_on:
      - postgres
      - kafka
      - migrate
    ports:
      - "8080:8080"

volumes:
  pgdata:
